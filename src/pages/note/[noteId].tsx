import { type NextPage } from 'next'
import Head from 'next/head'
import { useRouter } from 'next/router'
import { Layout } from './_layout'
import { api } from '../../utils/api'

const NotePage: NextPage = () => {
  const router = useRouter()
  const { noteId } = router.query
  const { data: note } = api.note.getOne.useQuery({ id: noteId as string })

  return (
    <>
      <Head>
        <title>Note</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        {note && (
          <div className="p-4 max-w-5xl w-full">
            <p>{note.title}</p>
            <p dangerouslySetInnerHTML={{ __html: note.content }} />
          </div>
        )}
        {!note && (
          <div className="p-4 max-w-5xl w-full">
            <p>death :(</p>
          </div>
        )}
      </Layout>
    </>
  )
}

export default NotePage
