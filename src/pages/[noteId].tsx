import { type NextPage } from 'next'
import Head from 'next/head'
import { useRouter } from 'next/router'
import BraneEditor from '../components/editor'
import { Layout } from '../components/layout/sidebar'
import { api } from '../utils/api'
import type { Descendant } from 'slate'
import type { FormEvent } from 'react'
import { useEffect, useState } from 'react'

const NotePage: NextPage = () => {
  const router = useRouter()
  const utils = api.useContext()
  const { noteId } = router.query as { noteId: string }
  const { data: note } = api.note.getOne.useQuery({ id: noteId })
  const [title, setTitle] = useState('')
  const [content, setContent] = useState<Descendant[]>([])
  const update = api.note.update.useMutation({
    async onMutate () {
      await utils.note.getAll.cancel()
      const prevData = utils.note.getAll.getData()
      return { prevData }
    },
    onError (_err, _newNote, ctx) {
      utils.note.getAll.setData(undefined, ctx?.prevData)
    },
    onSettled () {
      void utils.note.getAll.invalidate()
    }
  })
  const handleUpdate = (e: FormEvent<unknown>) => {
    e.preventDefault()

    if (!note) return

    update.mutate({ id: noteId, title, content: JSON.stringify(content) })
  }

  useEffect(() => {
    setTitle(note?.title ?? '')
    setContent(note ? JSON.parse(note.content) as Descendant[] : [])
  }, [note])

  return (
    <>
      <Head>
        <title>{note?.title ?? 'Loading...'} - Brane</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        {note && (
          <div className="p-4 max-w-5xl w-full">
            <form className="flex flex-col gap-4"
              onSubmit={(e) => handleUpdate(e)}
            >
              <div className='flex gap-4'>
                <input
                  type="text"
                  name="title"
                  id="title"
                  value={title}
                  onChange={(e) => setTitle(e.target.value)}
                  className="flex-1 border-b border-gray-300 outline-none"
                  placeholder='Title'
                />
                <button type="submit">save</button>
              </div>
              <BraneEditor value={content} onChange={setContent} />
            </form>
          </div>
        )}
        {!note && (
          <div className="p-4 max-w-5xl w-full">
            <p>death :(</p>
          </div>
        )}
      </Layout>
    </>
  )
}

export default NotePage
